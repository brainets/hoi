
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/metrics/plot_oinfo.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_metrics_plot_oinfo.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_metrics_plot_oinfo.py:


Metrics example 1
============================================
Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nesciunt neque, perferendis sed id doloribus at error in ea nulla reprehenderit optio rerum nostrum harum voluptas, sequi laudantium numquam accusantium consequuntur minus quisquam autem magnam distinctio. Itaque, fuga quisquam. Dolorum commodi molestiae soluta, dolorem tenetur magni illum distinctio minus vero tempore quibusdam totam sed, sapiente aliquam aperiam sunt accusantium quisquam eos rerum cupiditate fuga debitis inventore. Exercitationem nihil ipsa aliquid, placeat laborum ut vel odio deserunt adipisci minima blanditiis aperiam nisi veniam cum labore deleniti reiciendis earum eligendi dignissimos suscipit beatae ex a! Omnis commodi modi magnam esse molestias odit, non unde eius vel, aspernatur perferendis voluptatibus nam nihil, aut et. Molestias, quos quia soluta minus illum amet cupiditate iure a assumenda debitis sint dolor, dolorem at. Tempora, dolorum maiores! Explicabo molestias nostrum nihil non laboriosam accusantium aut maxime. Tenetur similique natus quos accusamus, dicta iure? Exercitationem id aut laborum itaque consequatur delectus molestias labore sequi. Libero distinctio laboriosam debitis possimus beatae nisi quae autem in voluptatibus labore vero error omnis neque, quisquam culpa odio! Tempore neque ipsa voluptatibus alias laudantium id voluptates reiciendis dolorem iusto cumque tenetur illum aliquid maiores totam sint rem repellat, repellendus molestias deserunt deleniti odit mollitia?

.. GENERATED FROM PYTHON SOURCE LINES 6-27



.. image-sg:: /auto_examples/metrics/images/sphx_glr_plot_oinfo_001.png
   :alt: plot oinfo
   :srcset: /auto_examples/metrics/images/sphx_glr_plot_oinfo_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
      0%|          |  0/12 [00:00<?,       ?it/s]      8%|▊         | Entropy H(1):  1/12 [00:00<00:04,    2.58it/s]     17%|█▋        | Entropy H(2):  2/12 [00:00<00:03,    2.90it/s]     25%|██▌       | Entropy H(3):  3/12 [00:01<00:03,    2.97it/s]     33%|███▎      | Entropy H(4):  4/12 [00:01<00:02,    2.86it/s]     42%|████▏     | Entropy H(5):  5/12 [00:01<00:02,    2.93it/s]     50%|█████     | Entropy H(6):  6/12 [00:02<00:02,    2.98it/s]     58%|█████▊    | Entropy H(7):  7/12 [00:02<00:01,    3.21it/s]     67%|██████▋   | Entropy H(8):  8/12 [00:02<00:01,    3.39it/s]     75%|███████▌  | Entropy H(9):  9/12 [00:02<00:00,    3.56it/s]     83%|████████▎ | Entropy H(10):  10/12 [00:02<00:00,    3.71it/s]     92%|█████████▏| Entropy H(11):  11/12 [00:02<00:00,    3.87it/s]    100%|██████████| Entropy H(12):  12/12 [00:03<00:00,    3.93it/s]                                                                       0%|          |  0/4017 [00:00<?,       ?it/s]     10%|▉         | Mutual information:  400/4017 [00:00<00:00, 6938.35it/s]     15%|█▍        | Mutual information:  600/4017 [00:00<00:00, 5517.22it/s]     20%|█▉        | Mutual information:  800/4017 [00:00<00:00, 4922.54it/s]     25%|██▍       | Mutual information:  1000/4017 [00:00<00:00, 4723.99it/s]     30%|██▉       | Mutual information:  1200/4017 [00:00<00:00, 4689.27it/s]     35%|███▍      | Mutual information:  1400/4017 [00:00<00:00, 4694.75it/s]     40%|███▉      | Mutual information:  1600/4017 [00:00<00:00, 4557.96it/s]     45%|████▍     | Mutual information:  1800/4017 [00:00<00:00, 4570.28it/s]     50%|████▉     | Mutual information:  2000/4017 [00:00<00:00, 4492.50it/s]     55%|█████▍    | Mutual information:  2200/4017 [00:00<00:00, 4471.54it/s]     60%|█████▉    | Mutual information:  2400/4017 [00:00<00:00, 4489.08it/s]     65%|██████▍   | Mutual information:  2600/4017 [00:00<00:00, 4491.11it/s]     70%|██████▉   | Mutual information:  2800/4017 [00:00<00:00, 4486.25it/s]     75%|███████▍  | Mutual information:  3000/4017 [00:00<00:00, 4506.61it/s]     80%|███████▉  | Mutual information:  3200/4017 [00:00<00:00, 4427.10it/s]     85%|████████▍ | Mutual information:  3400/4017 [00:00<00:00, 4420.62it/s]     90%|████████▉ | Mutual information:  3600/4017 [00:00<00:00, 4462.60it/s]     95%|█████████▍| Mutual information:  3800/4017 [00:00<00:00, 4472.02it/s]    100%|█████████▉| Mutual information:  4000/4017 [00:00<00:00, 4486.54it/s]    100%|██████████| Mutual information:  4017/4017 [00:00<00:00, 4223.08it/s]    100%|██████████| Mutual information:  4017/4017 [00:00<00:00, 4324.59it/s]
       index  order       hoi          multiplet
    0      0      3  0.302748          [0, 1, 2]
    1    200      3  0.206405          [6, 7, 8]
    2    714      4  0.024395     [8, 9, 10, 11]
    3   1506      5  0.013438  [7, 8, 9, 10, 11]
    4    713      4  0.012882     [7, 9, 10, 11]
    5    162      3 -0.012964         [3, 9, 11]
    6    608      4 -0.013542      [3, 4, 9, 11]
    7    183      3 -0.014325         [4, 9, 11]
    8    136      3 -0.766415          [3, 4, 5]
    9    219      3 -0.827950        [9, 10, 11]






|

.. code-block:: default

    import numpy as np

    from hoi.metrics import Oinfo, InfoTopo
    from hoi.plot import plot_landscape
    from hoi.utils import get_nbest_mult
    from hoi.simulation import simulate_hois_gauss

    import matplotlib.pyplot as plt

    plt.style.use("ggplot")

    x = simulate_hois_gauss()

    model = InfoTopo(x)
    hoi = model.fit(minsize=3, maxsize=None, method="gcmi")

    print(get_nbest_mult(hoi, model))

    plot_landscape(hoi, model=model, plt_kwargs=dict(cmap="turbo"))
    plt.tight_layout()
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 5.625 seconds)

**Estimated memory usage:**  137 MB


.. _sphx_glr_download_auto_examples_metrics_plot_oinfo.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oinfo.py <plot_oinfo.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oinfo.ipynb <plot_oinfo.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
